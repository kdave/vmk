#!/bin/sh

set -e

qcow="$1"
nbd=/dev/nbd7
nbdout=/dev/nbd6
nbdbase=$(basename "$nbd")
nbdoutbase=$(basename "$nbdout")
sudo=sudo
out=img-$$.raw
outqcow2=$(basename "$out" .raw).qcow2
table=$out.table

qnbd='--detect-zeroes=unmap --discard=unmap'

MSG() { echo === "$@"; }

if grep "$nbdbase" /proc/partitions; then
	echo "ERROR: found $nbd in partitions"
	exit 1
fi

if grep "$nbdoutbase" /proc/partitions; then
	echo "ERROR: found $nbdout in partitions"
	exit 1
fi

if ! [ -f "$qcow" ]; then
	echo "ERROR: no qcow2 $qcow"
	exit 1
fi

MSG open qcow as nbd
$sudo qemu-nbd $qnbd -c "$nbd" "$qcow"
MSG dump partition table
$sudo sfdisk --dump "$nbd" > "$table"
MSG read size of bdev
sizekb=$(grep "$nbdbase"'$' /proc/partitions | awk '{print $3}')
MSG create out qcow2 with size
$sudo qemu-img create -f qcow2 "$outqcow2" "$sizekb"k
MSG open nbd file "$outqcow2"
$sudo qemu-nbd $qnbd -c "$nbdout" "$outqcow2"
MSG copy bootsector, first 1M
$sudo dd if="$nbd" of="$nbdout" bs=1M count=1 conv=sparse status=progress
MSG copy partition
$sudo sfdisk "$nbdout" < "$table"
rm "$table"
MSG close nbdout
$sudo qemu-nbd -d "$nbdout"
MSG reopen file with partitions
$sudo qemu-nbd $qnbd -c "$nbdout" "$outqcow2"
MSG dd sparse all partitions to nbdout
for part in $(grep "${nbdbase}p[0-9]" /proc/partitions | awk '{print $4}'); do
	pp=${part#$nbdbase}
	mkdir -p mnt
	btype=$($sudo blkid -s TYPE "/dev/$part" -o value)
	if [ "$btype" = "swap" ]; then
		MSG 'do' not copy swap, recreate
		uuid=$(sudo blkid -s UUID "/dev/$part" -o value)
		$sudo mkswap --uuid "$uuid" "$nbdout$pp"
		continue
	fi

	if $sudo mount "/dev/$part" mnt; then
		MSG fstrim $part before copying
		$sudo fstrim -v mnt || true
		$sudo umount mnt
	fi
	echo "copy /dev/$part to $lo$pp"
	echo "dd if=/dev/$part of=$nbdout$pp bs=1M conv=sparse status=progress"
	$sudo dd if="/dev/$part" of="$nbdout$pp" bs=1M conv=sparse status=progress
done
MSG close nbdout
$sudo qemu-nbd -d "$nbdout"
MSG close nbd
$sudo qemu-nbd -d "$nbd"
